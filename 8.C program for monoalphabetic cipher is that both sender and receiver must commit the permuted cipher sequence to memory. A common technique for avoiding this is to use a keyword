#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

int main() {
    char keyword[] = "CIPHER";
    char plaintext[] = "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG";
    char ciphertext[100];
    char key[ALPHABET_SIZE + 1];
    int i, j, k = 0;

    // Generate the key based on the keyword
    for (i = 0; i < strlen(keyword); i++) {
        key[i] = keyword[i];
    }

    // Fill the remaining characters in the key with the unused letters in normal order
    for (i = 'A'; i <= 'Z'; i++) {
        int found = 0;
        for (j = 0; j < strlen(keyword); j++) {
            if (toupper(keyword[j]) == i) {
                found = 1;
                break;
            }
        }
        if (!found) {
            key[strlen(keyword) + k++] = i;
        }
    }
    key[ALPHABET_SIZE] = '\0';

    // Encrypt the plaintext using the generated key
    for (i = 0; plaintext[i]; i++) {
        if (isalpha(plaintext[i])) {
            if (isupper(plaintext[i])) {
                ciphertext[i] = key[plaintext[i] - 'A'];
            } else {
                ciphertext[i] = tolower(key[plaintext[i] - 'a']);
            }
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0';

    // Print the encrypted text
    printf("Plaintext: %s\n", plaintext);
    printf("Keyword: %s\n", keyword);
    printf("Generated Key: %s\n", key);
    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
