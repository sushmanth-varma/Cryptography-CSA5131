#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

int main() {
    char keyword[100];
    char matrix[SIZE][SIZE];
    char plaintext[100];
    char ciphertext[100] = "";
    int i, j, k, row1, col1, row2, col2;

    // Input the keyword
    printf("Enter the keyword: ");
    fgets(keyword, sizeof(keyword), stdin);

    // Remove newline character from input keyword
    keyword[strcspn(keyword, "\n")] = '\0';

    // Construct the keyword without duplicate letters and without 'j'
    k = 0;
    for (i = 0; keyword[i]; i++) {
        if (keyword[i] != ' ' && !strchr(keyword, keyword[i] + 32) && keyword[i] != 'j') {
            keyword[k++] = tolower(keyword[i]);
        }
    }
    keyword[k] = '\0';

    // Fill the Playfair matrix with the keyword
    k = 0;
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (k < strlen(keyword)) {
                matrix[i][j] = keyword[k++];
            }
        }
    }

    // Fill the remaining spaces in the matrix with the remaining letters of the alphabet
    for (i = 0; i < 26; i++) {
        if (k < SIZE * SIZE && strchr(keyword, 'a' + i) == NULL && 'a' + i != 'j') {
            matrix[k / SIZE][k % SIZE] = 'a' + i;
            k++;
        }
    }

    // Input the plaintext
    printf("Enter the plaintext (use 'x' to separate repeating characters): ");
    fgets(plaintext, sizeof(plaintext), stdin);

    // Remove newline character from input plaintext
    plaintext[strcspn(plaintext, "\n")] = '\0';

    // Remove spaces and convert plaintext to lowercase
    k = 0;
    for (i = 0; plaintext[i]; i++) {
        if (plaintext[i] != ' ') {
            plaintext[k++] = tolower(plaintext[i]);
        }
    }
    plaintext[k] = '\0';

    // Encrypt the plaintext
    k = 0;
    for (i = 0; i < strlen(plaintext); i += 2) {
        char a = plaintext[i];
        char b = (plaintext[i + 1] != '\0') ? plaintext[i + 1] : 'x';

        // Find positions of characters in the matrix
        for (j = 0; j < SIZE; j++) {
            for (k = 0; k < SIZE; k++) {
                if (matrix[j][k] == a) {
                    row1 = j;
                    col1 = k;
                }
                if (matrix[j][k] == b) {
                    row2 = j;
                    col2 = k;
                }
            }
        }

        // Encrypt the pair of characters
        if (row1 == row2) { // Same row
            ciphertext[strlen(ciphertext)] = matrix[row1][(col1 + 1) % SIZE];
            ciphertext[strlen(ciphertext)] = matrix[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) { // Same column
            ciphertext[strlen(ciphertext)] = matrix[(row1 + 1) % SIZE][col1];
            ciphertext[strlen(ciphertext)] = matrix[(row2 + 1) % SIZE][col2];
        } else { // Different row and column
            ciphertext[strlen(ciphertext)] = matrix[row1][col2];
            ciphertext[strlen(ciphertext)] = matrix[row2][col1];
        }
    }

    // Print the encrypted text
    printf("Encrypted text: %s\n", ciphertext);

    return 0;
}
